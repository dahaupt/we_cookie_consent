{"version":3,"sources":["ConsentApp.js"],"names":["ConsentApp","window","counter","tempObj","variable","app","event","trigger","ownCallback","configLink","text","klaroConfig","translations","title","console","clearInterval","currentButton","$","cloneButton","checkConsentOptIn","$parentElement","createConsentOptInContainer","link","name","getManager","updateConsent","href","$element","klaro","confirmed","index","cloneButttonInterval","setInterval"],"mappings":"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","file":"ConsentApp.js","sourcesContent":["const ConsentApp = new function () {\n    //-- global variables ---\n    window.dataLayer = window.dataLayer || [];\n\n    //--- private variables ---\n    var cloneButttonInterval, counter = 0;\n\n    //--- public functions ---\n    /**\n     * Callback function for GoogleTagManager Script to fire the dataLayer trigger\n     * @param bool state\n     * @param object app\n     */\n    this.consentChanged = function (state, app) {\n        if (state === true) {\n            if (app.name.indexOf('google-tagmanager-service') !== -1) {\n                let tempObj = {\n                    event: app.gtm.trigger\n                };\n                tempObj[app.gtm.variable] = true;\n                window.dataLayer.push(tempObj);\n\n                /*\n                //ES6 - https://stackoverflow.com/questions/11508463/javascript-set-object-key-by-variable\n                window.dataLayer.push({\n                    event: app.name,\n                    [app.name]: true\n                });\n                */\n            }\n        }\n\n        //Check if the own callback function is allready defined\n        if (typeof window[app.ownCallback] === \"function\") {\n            window[app.ownCallback](state, app);\n        } else if (app.ownCallback !== '') {\n            console.error('The Callback function ' + app.ownCallback + ' is not yet defined. Please create it first.');\n        }\n    };\n\n    /**\n     * Replace the klaro \"OK\" button with a clone to remove all attached event listeners.\n     * Otherwise our own defined listener gets not fired.\n     */\n    this.cloneButton = function () {\n        if ($('.cookie-notice .cm-btn-success').length > 0) {\n            let currentButton = $('.cookie-notice .cm-btn-success');\n            let cloneButton = currentButton.clone();\n            let configLink = $('.cookie-notice p a');\n\n            //Replace the original button with the new\n            currentButton.replaceWith(cloneButton);\n\n            //Workaround to link the privacypage inside the consent text https://github.com/KIProtect/klaro/issues/116\n            $('.cn-body p:first').html(function (index, text) {\n                let link = $('<a>', {\n                    text: klaroConfig.translations.en.consentModal.privacyPolicy.name,\n                    title: klaroConfig.translations.en.consentModal.privacyPolicy.name,\n                    href: klaroConfig.privacyPolicy,\n                    class: 'privcyPage'\n                })\n                return text.replace(\"[privacyPage]\", link[0].outerHTML);\n            });\n\n            clearInterval(cloneButttonInterval);\n            counter = 0;\n        }\n\n        if (counter > 1000) {\n            clearInterval(cloneButttonInterval);\n        }\n        counter++;\n    };\n\n    /**\n     * Evaluates the state of the consent and initiates all further opt-in modifications.\n     *\n     * @param state\n     * @param app\n     * @param $element\n     * @param $parentElement\n     */\n    this.checkConsentOptIn = function (state, app, $element, $parentElement) {\n        if (!state) {\n            $element.hide();\n            $parentElement.prepend(this.createConsentOptInContainer(app));\n\n            $('button[data-optin=\"' + app.name + '\"]').click(function () {\n                klaro.getManager().updateConsent(app.name, true);\n\n                if ($('input[data-optin-always=\"' + app.name + '\"]').is(':checked')) {\n                    klaro.getManager().saveAndApplyConsents();\n                } else {\n                    klaro.getManager().applyConsents();\n                }\n            });\n        } else {\n            $parentElement.find('.service-opt-in').remove();\n            $element.show();\n        }\n    };\n\n    /**\n     * Creates a service opt-in container based on the provided app.\n     *\n     * @param app\n     * @returns {string}\n     */\n    this.createConsentOptInContainer = function (app) {\n        return `<div data-service=\"${app.name}\" class=\"service-opt-in\">\n            <p class=\"lead\">${app.title}</p>\n            ${app.optInText}\n            <button class=\"btn btn-primary btn-sm\" data-optin=\"${app.name}\">${klaroConfig.translations.en.activate}</button>\n              <div class=\"form-check\">\n                <input id=\"optin-always-${app.name}\" type=\"checkbox\" class=\"form-check-input\" data-optin-always=\"${app.name}\" checked>\n                <label for=\"optin-always-${app.name}\" class=\"form-check-label\">${klaroConfig.translations.en.activateAlways}</label>\n            </div>\n          </div>`;\n    };\n\n    //--- constructor ---\n    (function construct() {\n        $(document).ready(function () {\n            // listener for the button on the privacy page to edit the consent\n            $('.js-showConsentModal').on('click', function (event) {\n                event.preventDefault();\n                klaro.show();\n            });\n\n            //Workaround if modal ist closed without save\n            $(document).on('click', 'div.cm-bg, button.hide', function (event) {\n                event.preventDefault();\n                ConsentApp.cloneButton();\n            });\n\n            //Only execute, if no decision is made yet (first visit).\n            if (klaro.getManager().confirmed === false) {\n                //Workaround for issue https://github.com/KIProtect/klaro/issues/138\n                $(document).on('click', '.cookie-notice .cm-btn-success', function (event) {\n                    klaroConfig.services.forEach(function (element, index) {\n                        klaroConfig.services[index].default = klaroConfig.services[index].defaultIfNoConsent;\n                    });\n                    klaro.getManager().resetConsents();\n                    klaro.getManager().saveAndApplyConsents();\n\n                    $('.cookie-notice ').remove();\n                });\n\n                //Workaround, because there is no klaro callback function\n                cloneButttonInterval = setInterval(ConsentApp.cloneButton, 1);\n            }\n        });\n    })();\n};\n"]}
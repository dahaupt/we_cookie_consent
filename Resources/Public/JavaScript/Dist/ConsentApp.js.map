{"version":3,"sources":["ConsentApp.js"],"names":["ConsentApp","window","counter","tempObj","variable","app","event","trigger","ownCallback","configLink","text","klaroConfig","translations","title","console","clearInterval","currentButton","$","cloneButton","construct","show","link","preventDefault","apps","klaro","cloneButttonInterval","setInterval"],"mappings":"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","file":"ConsentApp.js","sourcesContent":["const ConsentApp = new function () {\n    //-- global variables ---\n    window.dataLayer = window.dataLayer || [];\n\n    //--- private variables ---\n    var cloneButttonInterval, counter = 0;\n\n    //--- public functions ---\n    /**\n     * Callback function for GoogleTagManager Script to fire the dataLayer trigger\n     * @param bool state\n     * @param object app\n     */\n    this.consentChanged = function (state, app) {\n        if (state === true) {\n            if (app.name.indexOf('google-tagmanager-service') !== -1) {\n                let tempObj = {\n                    event: app.gtm.trigger\n                };\n                tempObj[app.gtm.variable] = true;\n                window.dataLayer.push(tempObj);\n\n                /*\n                //ES6 - https://stackoverflow.com/questions/11508463/javascript-set-object-key-by-variable\n                window.dataLayer.push({\n                    event: app.name,\n                    [app.name]: true\n                });\n                */\n            }\n        }\n\n        //Check if the own callback function is allready defined\n        if (typeof window[app.ownCallback] === \"function\") {\n            window[app.ownCallback](state, app);\n        } else if (app.ownCallback !== '') {\n            console.error('The Callback function ' + app.ownCallback + ' is not yet defined. Please create it first.');\n        }\n    };\n\n    /**\n     * Replace the klaro \"OK\" button with a clone to remove all attached event listeners.\n     * Otherwise our own defined listener gets not fired.\n     */\n    this.cloneButton = function () {\n        if ($('.cookie-notice .cm-btn-success').length > 0) {\n            let currentButton = $('.cookie-notice .cm-btn-success');\n            let cloneButton = currentButton.clone();\n            let configLink = $('.cookie-notice p a');\n\n            //Replace the original button with the new\n            currentButton.replaceWith(cloneButton);\n\n            //Workaround to link the privacypage inside the consent text https://github.com/KIProtect/klaro/issues/116\n            $('.cn-body p:first').html(function (index, text) {\n                let link = $('<a>', {\n                    text: klaroConfig.translations.en.consentModal.privacyPolicy.name,\n                    title: klaroConfig.translations.en.consentModal.privacyPolicy.name,\n                    href: klaroConfig.privacyPolicy,\n                    class: 'privcyPage'\n                })\n                return text.replace(\"[privacyPage]\", link[0].outerHTML);\n            });\n\n            clearInterval(cloneButttonInterval);\n            counter = 0;\n        }\n\n        if (counter > 1000) {\n            clearInterval(cloneButttonInterval);\n        }\n        counter++;\n    };\n\n    //--- constructor ---\n    (function construct() {\n        $(document).ready(function () {\n            // listener for the button on the privacy page to edit the consent\n            $('.js-showConsentModal').on('click', function (event) {\n                event.preventDefault();\n                klaro.show();\n            });\n\n            //Workaround if modal ist closed without save\n            $(document).on('click', 'div.cm-bg, button.hide', function (event) {\n                event.preventDefault();\n                ConsentApp.cloneButton();\n            });\n\n            //Only execute, if no decision is made yet (first visit).\n            if (klaro.getManager().confirmed === false) {\n                //Workaround for issue https://github.com/KIProtect/klaro/issues/138\n                $(document).on('click', '.cookie-notice .cm-btn-success', function (event) {\n                    klaroConfig.apps.forEach(function (element, index) {\n                        klaroConfig.apps[index].default = klaroConfig.apps[index].defaultIfNoConsent;\n                    });\n                    klaro.getManager().resetConsent();\n                    klaro.getManager().saveAndApplyConsents();\n\n                    $('.cookie-notice ').remove();\n                });\n\n                //Workaround, because there is no klaro callback function\n                cloneButttonInterval = setInterval(ConsentApp.cloneButton, 1);\n            }\n        });\n    })();\n};\n"]}
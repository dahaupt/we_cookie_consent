{"version":3,"sources":["ConsentApp.js"],"names":["ConsentApp","window","event","trigger","service","$","$element","klaro","getManager","$parentElement","saveAndApplyConsents","createConsentOptInContainer","klaroConfig","translations"],"mappings":"mJAAA,GAAMA,CAAAA,UAAU,CAAG,GAAI,WAAY,CAE/BC,MAAM,CAANA,SAAAA,CAAmBA,MAAM,CAANA,SAAAA,EAAnBA,EAF+B,CAanBC,KAAAA,iBAAAA,CAAmBC,SAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CADvB,CACuBA,EAG1BF,MAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAAAA,eAAAA,CAAAA,CANLC,KAAA,CAAAE,CAAA,CAAAA,GAAAA,CAAAD,OAMKF,CAAAA,CAFQG,CAAO,CAAPA,GAAAA,CAERH,QAAAA,IAAAA,CAHOC,CAbmB,CA2B/B,KAAA,iBAAA,CAAyB,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAsD,CAanE,GAAIG,CAAAA,CAAAA,EAAEC,CAAA,CAAN,MAAA,CAAM,CACFC,GAAMC,CAAAA,CAAAA,CAAND,CAAAE,CAAAA,CAAmBC,CAAnBD,IAAAA,CAAAA,iBAAAA,EAAAA,MAAAF,CADJ,GAAA,CAAA,CAGUC,OAGXF,CAAA,CAAAA,IAAAA,EANO,CAOVG,CAAoB,CAApBA,OAAAA,CAAoB,KAAA,2BAAA,CAApBA,CAAoB,CAApBA,CAPU,CASbJ,CAAA,CAAA,uBAAAD,CAAA,CAAA,IAAA,CAAAC,KAAA,CAAAA,CAAAA,KAAAA,CAAA,UAAA,CAtBLE,KAAA,CAAAA,UAAAA,GAAAA,aAAAA,CAAAH,CAAA,CAAAG,IAAAA,IAsBK,CASAI,CAAAA,CAAAA,6BAAwCP,CAAS,CAAjDO,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,UAAAA,CATA,CAUiBJ,KAAGK,CAAHL,UAAAA,GAAAA,oBAAAA,EAVjB,CASLA,KAAA,CAAAA,UAAAA,GAAAA,aAAAA,EATKF,CAAAA,CATO,CAAA,IAOJI,CAAAA,CAAc,CAAdA,IAAAA,CAAAA,iBAAAA,EAAAA,MAAAA,EAPI,CAQJH,CAAQ,CAARA,IAAAA,EArBR,CA3B+B,CA0D/B,KAAA,2BAAA,CAAmC,SAAA,CAAA,CAAmB,CAClD,GAAMO,CAAAA,CAAY,CAAGD,WAAW,CAAXA,YAAAA,CAAyBL,KAAK,CAAnD,QAA8CA,EAAzBK,CAArB,CAEA,MAAA,uBAAA,MAAA,CAA6BR,CAAO,CAApC,IAAA,CAAA,8DAAA,EAAA,MAAA,CACsBA,CAAO,CAD7B,KAAA,CAAA,oBAAA,EAAA,MAAA,CAEMA,CAAO,CAFb,SAAA,CAAA,sEAAA,EAAA,MAAA,CAGyDA,CAAO,CAHhE,IAAA,CAAA,KAAA,EAAA,MAAA,CAG0ES,CAAY,CAHtF,QAAA,CAAA,gGAAA,EAAA,MAAA,CAKkCT,CAAO,CALzC,IAAA,CAAA,sEAAA,EAAA,MAAA,CAK+GA,CAAO,CALtH,IAAA,CAAA,yDAAA,EAAA,MAAA,CAMmCA,CAAO,CAN1C,IAAA,CAAA,gCAAA,EAAA,MAAA,CAM6ES,CAAY,CANzF,cAAA,CAAA,gDAAA,CAHJ,CA1DJ,CAAA","file":"ConsentApp.js","sourcesContent":["const ConsentApp = new function () {\n    //-- global variables ---\n    window.dataLayer = window.dataLayer || [];\n\n    //--- public functions ---\n    /**\n     * Callback function for GoogleTagManager Script to fire the dataLayer trigger\n     * @param consent\n     * @param service\n     */\n    this.gtmServiceChanged = function (consent, service) {\n        if (consent) {\n            window.dataLayer.push({\n                event: service.gtm.trigger,\n                [service.gtm.variable]: true\n            });\n        }\n    };\n\n    /**\n     * Evaluates the consent and initiates all further opt-in modifications.\n     *\n     * @param consent\n     * @param service\n     * @param $element\n     * @param $parentElement\n     */\n    this.checkConsentOptIn = function (consent, service, $element, $parentElement) {\n        if (!consent && $element.length) {\n            let hasOptIn = $parentElement.find('.service-opt-in').length > 0;\n            if (hasOptIn) {\n                return;\n            }\n\n            $element.hide();\n            $parentElement.prepend(this.createConsentOptInContainer(service));\n\n            $('button[data-optin=\"' + service.name + '\"]').click(function () {\n                klaro.getManager().updateConsent(service.name, true);\n\n                if ($('input[data-optin-always=\"' + service.name + '\"]').is(':checked')) {\n                    klaro.getManager().saveAndApplyConsents();\n                } else {\n                    klaro.getManager().applyConsents();\n                }\n            });\n        } else {\n            $parentElement.find('.service-opt-in').remove();\n            $element.show();\n        }\n    };\n\n    /**\n     * Creates a service opt-in container based on the provided service.\n     *\n     * @param service\n     * @returns {string}\n     */\n    this.createConsentOptInContainer = function (service) {\n        const translations = klaroConfig.translations[klaro.language()];\n\n        return `<div data-service=\"${service.name}\" class=\"service-opt-in\">\n            <p class=\"lead\">${service.title}</p>\n            ${service.optInText}\n            <button class=\"btn btn-primary btn-sm\" data-optin=\"${service.name}\">${translations.activate}</button>\n              <div class=\"form-check\">\n                <input id=\"optin-always-${service.name}\" type=\"checkbox\" class=\"form-check-input\" data-optin-always=\"${service.name}\" checked>\n                <label for=\"optin-always-${service.name}\" class=\"form-check-label\">${translations.activateAlways}</label>\n            </div>\n          </div>`;\n    };\n};\n"]}